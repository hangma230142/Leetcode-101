import java.util.*;

public class Solution {
    // Helper method to check if a string starts and ends with a vowel
    private boolean isVowelString(String word) {
        Set<Character> vowels = new HashSet<>(Arrays.asList('a', 'e', 'i', 'o', 'u'));
        return vowels.contains(word.charAt(0)) && vowels.contains(word.charAt(word.length() - 1));
    }

    public int[] vowelStrings(String[] words, int[][] queries) {
        int n = words.length;
        int[] prefix = new int[n];
        prefix[0] = isVowelString(words[0]) ? 1 : 0;
        for (int i = 1; i < n; i++) {
            prefix[i] = prefix[i - 1] + (isVowelString(words[i]) ? 1 : 0);
        }

        int[] result = new int[queries.length];
        for (int i = 0; i < queries.length; i++) {
            int li = queries[i][0];
            int ri = queries[i][1];
            if (li == 0) {
                result[i] = prefix[ri];
            } else {
                result[i] = prefix[ri] - prefix[li - 1];
            }
        }

        return result;
    }

    public static void main(String[] args) {
        Solution solution = new Solution();

        // Test Case 1
        String[] words1 = {"aba", "bcb", "ece", "aa", "e"};
        int[][] queries1 = {{0, 2}, {1, 4}, {1, 1}};
        int[] result1 = solution.vowelStrings(words1, queries1);
        System.out.println("Test Case 1 Result: " + Arrays.toString(result1));  // Expected: [2, 3, 0]

        // Test Case 2
        String[] words2 = {"a", "e", "i"};
        int[][] queries2 = {{0, 2}, {0, 1}, {2, 2}};
        int[] result2 = solution.vowelStrings(words2, queries2);
        System.out.println("Test Case 2 Result: " + Arrays.toString(result2));  // Expected: [3, 2, 1]
    }
}
