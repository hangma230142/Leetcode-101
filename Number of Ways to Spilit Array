public class Solution {
    public int waysToSplitArray(int[] nums) {
        int n = nums.length;

        // Total sum of the array
        long totalSum = 0;
        for (int num : nums) {
            totalSum += num;
        }

        long leftSum = 0;
        int validSplitCount = 0;

        // Iterate through the array to calculate splits
        for (int i = 0; i < n - 1; i++) { // Ensure there's at least one element on the right
            leftSum += nums[i];
            long rightSum = totalSum - leftSum;

            // Check if the current split is valid
            if (leftSum >= rightSum) {
                validSplitCount++;
            }
        }

        return validSplitCount;
    }

    public static void main(String[] args) {
        Solution solution = new Solution();

        int[] nums1 = {10, 4, -8, 7};
        System.out.println(solution.waysToSplitArray(nums1)); // Output: 2

        int[] nums2 = {2, 3, 1, 0};
        System.out.println(solution.waysToSplitArray(nums2)); // Output: 1

        int[] nums3 = {1, 1, 1, 1, 1, 1};
        System.out.println(solution.waysToSplitArray(nums3)); // Output: 5
    }
}
