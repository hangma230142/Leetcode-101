import java.util.HashMap;

public class Solution {

    public int[] twoSum(int[] nums, int target) {
        // HashMap to store number and its index
        HashMap<Integer, Integer> map = new HashMap<>();
        
        // Iterate over the array
        for (int i = 0; i < nums.length; i++) {
            int complement = target - nums[i];
            
            // If complement exists in map, return the indices
            if (map.containsKey(complement)) {
                return new int[] { map.get(complement), i };
            }
            
            // Store the current number with its index
            map.put(nums[i], i);
        }
        
        // Return an empty array if no solution (as per problem, we assume there is always one solution)
        return new int[] {};
    }

    public static void main(String[] args) {
        Solution solution = new Solution();
        
        // Example test case
        int[] nums = {2, 7, 11, 15};
        int target = 9;
        
        int[] result = solution.twoSum(nums, target);
        
        // Output the result
        System.out.println("Indices: [" + result[0] + ", " + result[1] + "]");
    }
}
